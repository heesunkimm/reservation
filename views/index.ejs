<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reservation System</title>
	<link rel="stylesheet" type="text/css" href="/reset.css">
	<link rel="stylesheet" type="text/css" href="/style.css">
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <!-- iamport.payment.js -->
    <script type="text/javascript" src="https://cdn.iamport.kr/js/iamport.payment-1.2.0.js"></script>
	<!-- 포트원 라이브러리 추가 -->
	<script src="https://cdn.iamport.kr/v1/iamport.js"></script>
    <script src="/socket.io/socket.io.js"></script> 
</head>
<body>
    <%- include('header.ejs') %>
    <section class="index_sec content">
        <div class="status_box">
            <% let status = ['예약가능', '예약중', '예약완료']; %>
            <% status.forEach(status => { %>
                <div>
                    <p><%= status %></p>
                    <button data-status="<%= status %>" style="cursor: default;"></button>
                </div>
            <% }) %>
        </div>
        <div class="seat_box">
            <p>좌석표</p>
            <%  
                let rows = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];
                let cols = 10;
                let time = ['14:00', '16:00', '18:00'];
            %>

            <div class="time_box">
                    <button class="timeBtn" type="button" data-time="14:00">14:00</button>
            </div>
            
            <% rows.forEach(rows => { %>
                <% for(let col = 1; col <= cols; col++) { %>
                    <% 
                        let seatId = rows + col;
                        let selectedStatus = '예약가능';
                        let price;

                        if (['A', 'B'].includes(rows)) {
                            price = 160000;
                        }else if (['C', 'D'].includes(rows)) {
                            price = 140000;
                        }else if (['E', 'F'].includes(rows)) {
                            price = 120000;
                        }else {
                            price = 100000;
                        }

                        // 좌석 결제상태
                        allData.forEach(data => {
                            if (data.reservationSeat === seatId && data.reservationStatus === '예약완료') {
                                selectedStatus = '예약완료';
                            }
                        });
                    %>
                    <button class="seatBtn" type="button" data-seat="<%= seatId %>" data-price="<%= price %>" data-status="<%= selectedStatus %>" <%= selectedStatus === '예약완료' ? 'disabled' : '' %>><%= seatId %></button>
                <% } %>
                <br/>
            <% }); %>
            </div>
            <div class="submit_box">
                <div class="reserve_box">
                    <p class="reserve_time">시간: <span></span></p>
                    <p class="reserve_seat">좌석: <span></span></p>
                    <p class="reserve_price">금액: <span></span></p>
                </div>
                <button class="submitBtn" type="button">예약하기</button>
            </div>
    </section>
</body>
<script>
    $(document).ready(function () {
        let userId = '<%= user.userId %>';
        let userName = '<%= user.userName %>';
        const IMP = window.IMP;
        IMP.init('imp82624668');
        // 서버와 소켓 연결
        const socket = io();

        // 서버에게 초기 좌석 상태 받기
        socket.on('seatStatusUpdate', function(data) {
            let seatBtn = $(`[data-seat="${data.selectedSeat}"]`);
            let status = data.selectedStatus.trim();

            if (status === '예약완료') {
                seatBtn.prop('disabled', true).attr('data-status', '예약완료');
            } else if (status === '예약중') {
                seatBtn.prop('disabled', true).attr('data-status', '예약중');
            } else {
                seatBtn.prop('disabled', false).attr('data-status', '예약가능');
            }
        });

        // 시간 선택
        $(".timeBtn").on('click', function () {
            let selectedTime = $(this).data('time');
            $('.reserve_time span').text(selectedTime);
        });
        
        // 좌석 선택
        $(".seatBtn").on('click', function () {
            let selectedSeat = $(this).data('seat');
            let selectedPrice = $(this).data('price');
            let selectedStatus = $(this).data('status');
            
            $('.reserve_seat span').text(selectedSeat);
            $('.reserve_price span').text(selectedPrice);

        });

        // 결제 이벤트
        $(".submitBtn").on('click', function () {
            let selectedTime = $('.reserve_time span').text();
            let selectedSeat = $('.reserve_seat span').text();
            let selectedPrice = $('.reserve_price span').text();
            let selectedStatus = $('.seatBtn').data('status');

            if (!selectedTime || !selectedSeat || !selectedPrice) {
                return alert("시간과 좌석을 모두 선택해주세요.");
            }else if(selectedStatus === '예약중') {
                return alert("이미 선택된 좌석입니다.");
            }

            // 좌석상태 변경
            socket.emit('seatStatusUpdate', {
                selectedSeat: selectedSeat,
                selectedStatus: '예약중'
            });
            // 좌석 상태 변경
            let seatBtn = $(`[data-seat="${selectedSeat}"]`);
            seatBtn.prop('disabled', true).attr('data-status', '예약중');
            
            // 좌석 예약상태 확인
            $.ajax({
                url: `/reservations?reservationTime=${selectedTime}&reservationSeat=${selectedSeat}`,
                method: 'GET',
                success: function(res) {
                    if (res.available) {
                        // 예약 가능
                        requestPay(selectedTime, selectedSeat, selectedPrice); // 결제호출
                    } else {
                        // 예약 불가
                        alert(res.message);
                    }
                },
                error: function(xhr, status, err) {
                    console.error('예약 상태 조회 중 오류가 발생했습니다:', err);
                }
            });

        });

        function requestPay(time, seat, price) {
            IMP.request_pay({
                pg: 'kakaopay.TC0ONETIME',
                pay_method: 'card',
                merchant_uid: 'reservation_' + new Date().getTime(), // 주문번호
                name: "티켓 예매", 
                amount: price
            }, function (rsp) {
                if (rsp.success) {
                    // 결제 성공 시
                    $.ajax({
                        url: '/reservations',
                        method: 'POST',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify({
                            imp_uid: rsp.imp_uid,
                            merchant_uid: rsp.merchant_uid,
                            paymentsName: rsp.name,
                            userId: userId,
                            userName: userName,
                            reservationTime: time,
                            reservationSeat: seat,
                            reservationAmount: price
                        }),
                        success: function(res) {
                            if (res.success) {
                                alert(res.message);
                                // 결제완료 후 좌석상태 업데이트
                                socket.emit('seatStatusUpdate', {
                                    selectedSeat: seat,
                                    selectedStatus: '예약완료'
                                })
                                location.reload();
                            } else {
                                alert(res.message);
                                location.reload();
                            }
                        },
                        error: function(xhr, status, err) {
                            console.error('결제 처리 중 오류가 발생했습니다:', err);
                        }
                    });
                } else {
                    // 결제 실패 시
                    alert(rsp.error_msg);
                    location.reload();
                }
            });
        }
    });
</script>
</html>